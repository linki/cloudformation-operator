apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudformation-operator.fullname" . }}
  labels:
    control-plane: controller-manager
    {{- include "cloudformation-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
        {{- end }}
      labels:
        control-plane: controller-manager
        {{- include "cloudformation-operator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{ end }}
      serviceAccountName: {{ include "cloudformation-operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 10
      containers:
        - args:
          - --secure-listen-address=0.0.0.0:8443
          - --upstream=http://127.0.0.1:8080/
          - --logtostderr=true
          - --v=10
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: kube-rbac-proxy
          ports:
          - containerPort: 8443
            name: https
        - name: manager
          {{- with .Values.image }}
          image: "{{ .repository }}{{- if .sha }}@{{ .sha }}{{ else }}:{{ .tag | default "latest" }}{{ end }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - /manager
          args:
          - --health-probe-bind-address=:8081
          - --metrics-bind-address=127.0.0.1:8080
          - --leader-elect
{{- if .Values.tags }}
{{- range $key, $value := .Values.tags }}
          - --tag={{ $key }}={{ $value }}
        {{- end }}
        {{- end }}
{{- if .Values.capability.enabled }}
          - --capability=CAPABILITY_IAM
        {{- end }}
{{- if .Values.extraArgs }}
        {{- range $key, $value := .Values.extraArgs }}
          - --{{ $key }}={{ $value }}
        {{- end }}
        {{- end }}
          env:
          - name: AWS_REGION
{{- if .Values.operator.region }}
            value: {{ .Values.operator.region }}
{{- else }}
            value: eu-central-1
{{- end }}
{{- if .Values.extraEnv}}
          {{- range $key, $value := .Values.extraEnv }}
          - name: {{ $key }}
            value: {{ $value }}
          {{- end }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          securityContext:
            allowPrivilegeEscalation: false
          {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- end }}
{{- if .Values.extraVolumeMounts }}
          volumeMounts:
{{ toYaml .Values.extraVolumeMounts | indent 12 }}
{{- end }}
{{- if .Values.extraVolumes }}
      volumes:
{{ toYaml .Values.extraVolumes | indent 8 }}
{{- end }}
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
      terminationGracePeriodSeconds: 10
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
